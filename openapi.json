{
  "openapi": "3.1.0",
  "info": {
    "title": "Raccoon AI API",
    "description": "The Raccoon AI REST API. Find the documentation here: https://docs.raccoonai.tech/",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.raccoonai.tech"
    }
  ],
  "paths": {
    "/sessions/create": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Websocket Session Create Endpoint",
        "operationId": "fleet_websocket_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/status": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Status Endpoint",
        "operationId": "fleet_session_status",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/terminate": {
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Terminate Endpoint",
        "operationId": "fleet_session_terminate",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{session_id}/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Fleet Session Logs Endpoint",
        "operationId": "fleet_session_logs",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionLogsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/tasks": {
      "get": {
        "tags": [
          "LAM"
        ],
        "summary": "Get Tasks Endpoint",
        "operationId": "get_tasks",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks created after this Unix timestamp (in milliseconds).",
              "examples": [
                1678886400000
              ],
              "title": "Start Time"
            },
            "description": "Filter tasks created after this Unix timestamp (in milliseconds)."
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks created before this Unix timestamp (in milliseconds).",
              "examples": [
                1678972800000
              ],
              "title": "End Time"
            },
            "description": "Filter tasks created before this Unix timestamp (in milliseconds)."
          },
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks by a specific task ID.",
              "examples": [
                "task_123"
              ],
              "title": "Task Id"
            },
            "description": "Filter tasks by a specific task ID."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Page number for pagination.",
              "examples": [
                1
              ],
              "default": 1,
              "title": "Page"
            },
            "description": "Page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of tasks per page (maximum 100).",
              "examples": [
                20
              ],
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of tasks per page (maximum 100)."
          },
          {
            "name": "executionType[]",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "enum": [
                      "default",
                      "deepsearch",
                      "fleet"
                    ],
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks by execution type (e.g., 'default', 'deepsearch').",
              "examples": [
                [
                  "default",
                  "deepsearch"
                ]
              ],
              "title": "Executiontype[]"
            },
            "description": "Filter tasks by execution type (e.g., 'default', 'deepsearch')."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "timestamp",
                    "executionTime",
                    "taskId",
                    "status",
                    "executionType"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Field to sort tasks by (e.g., 'timestamp', 'executionTime').",
              "examples": [
                "timestamp"
              ],
              "default": "timestamp",
              "title": "Sort By"
            },
            "description": "Field to sort tasks by (e.g., 'timestamp', 'executionTime')."
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "ascend",
                    "descend"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort order ('ascend' or 'descend').",
              "examples": [
                "ascend"
              ],
              "default": "descend",
              "title": "Sort Order"
            },
            "description": "Sort order ('ascend' or 'descend')."
          },
          {
            "name": "raccoon_passcode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks by Raccoon passcode.",
              "examples": [
                "code123"
              ],
              "title": "Raccoon Passcode"
            },
            "description": "Filter tasks by Raccoon passcode."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get Sessions Endpoint",
        "operationId": "get_sessions",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions created after this Unix timestamp (in milliseconds).",
              "examples": [
                1678886400000
              ],
              "title": "Start Time"
            },
            "description": "Filter sessions created after this Unix timestamp (in milliseconds)."
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions created before this Unix timestamp (in milliseconds).",
              "examples": [
                1678972800000
              ],
              "title": "End Time"
            },
            "description": "Filter sessions created before this Unix timestamp (in milliseconds)."
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions by a specific session ID.",
              "examples": [
                "session_456"
              ],
              "title": "Session Id"
            },
            "description": "Filter sessions by a specific session ID."
          },
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions by a specific task ID.",
              "examples": [
                "task_123"
              ],
              "title": "Task Id"
            },
            "description": "Filter sessions by a specific task ID."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Page number for pagination.",
              "examples": [
                2
              ],
              "default": 1,
              "title": "Page"
            },
            "description": "Page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 50,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of sessions per page (maximum 100).",
              "examples": [
                15
              ],
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of sessions per page (maximum 100)."
          },
          {
            "name": "executionType[]",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "enum": [
                      "default",
                      "deepsearch",
                      "fleet"
                    ],
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions by execution type (e.g., 'default', 'deepsearch').",
              "examples": [
                [
                  "default"
                ]
              ],
              "title": "Executiontype[]"
            },
            "description": "Filter sessions by execution type (e.g., 'default', 'deepsearch')."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "timestamp",
                    "executionTime",
                    "taskId",
                    "status",
                    "executionType"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Field to sort sessions by (e.g., 'timestamp', 'executionTime').",
              "examples": [
                "timestamp"
              ],
              "default": "timestamp",
              "title": "Sort By"
            },
            "description": "Field to sort sessions by (e.g., 'timestamp', 'executionTime')."
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "ascend",
                    "descend"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort order ('ascend' or 'descend').",
              "examples": [
                "ascend"
              ],
              "default": "descend",
              "title": "Sort Order"
            },
            "description": "Sort order ('ascend' or 'descend')."
          },
          {
            "name": "raccoon_passcode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter sessions by Raccoon passcode.",
              "examples": [
                "code456"
              ],
              "title": "Raccoon Passcode"
            },
            "description": "Filter sessions by Raccoon passcode."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/extensions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List Extensions Endpoint",
        "operationId": "list_extensions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Upload Extension Endpoint",
        "operationId": "upload_extension",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_extension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/extensions/{extensionId}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get Extension Endpoint",
        "operationId": "get_extension",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the extension",
              "title": "Extensionid"
            },
            "description": "The ID of the extension"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Delete Extension Endpoint",
        "operationId": "delete_extension",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the extension to delete",
              "title": "Extensionid"
            },
            "description": "The ID of the extension to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/tail/linked-apps": {
      "get": {
        "tags": [
          "Tail"
        ],
        "summary": "Get Linked Apps Endpoint",
        "operationId": "get_linked_apps",
        "parameters": [
          {
            "name": "raccoonPasscode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Raccoonpasscode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAppsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/tail/app/auth-status": {
      "get": {
        "tags": [
          "Tail"
        ],
        "summary": "Get Auth Status Endpoint",
        "operationId": "get_auth_status",
        "parameters": [
          {
            "name": "raccoonPasscode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Raccoonpasscode"
            }
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Appname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/tail/apps": {
      "get": {
        "tags": [
          "Tail"
        ],
        "summary": "Get Apps Endpoint",
        "operationId": "get_apps_endpoint",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableAppsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/tail/users": {
      "get": {
        "tags": [
          "Tail"
        ],
        "summary": "Get Users Endpoint",
        "operationId": "get_users",
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Searchquery"
            }
          },
          {
            "name": "emailId",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Emailid"
            }
          },
          {
            "name": "raccoonPasscode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Raccoonpasscode"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 50,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "createdAt",
                    "name",
                    "email",
                    "raccoonPasscode"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "createdAt",
              "title": "Sortby"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "ascend",
                    "descend"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "descend",
              "title": "Sortorder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/tail/users/create": {
      "post": {
        "tags": [
          "Tail"
        ],
        "summary": "Create User Endpoint",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/tasks/{taskId}/media": {
      "get": {
        "tags": [
          "LAM"
        ],
        "summary": "Get Task Media Endpoint",
        "operationId": "get_task_media",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the task",
              "title": "Taskid"
            },
            "description": "The ID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskMediaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/sessions/{sessionId}/media": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get Session Media Endpoint",
        "operationId": "get_session_media",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the session",
              "title": "Sessionid"
            },
            "description": "The ID of the session"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionMediaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/run": {
      "post": {
        "tags": [
          "LAM"
        ],
        "summary": "Lam Run Endpoint",
        "operationId": "lam_run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LAMRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LAMResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/LAMResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    },
    "/lam/{app_name}/run": {
      "post": {
        "tags": [
          "LAM"
        ],
        "summary": "Lam Integrations Endpoint",
        "operationId": "lam_integration",
        "parameters": [
          {
            "name": "app_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IntegrationResponse"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/IntegrationResponse"
                    }
                  ],
                  "title": "Response Lam Integration",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponse"
                  }
                }
              },
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "raccoon-secret-key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "properties": {
          "action": {
            "type": "string",
            "title": "Action",
            "description": "The type of action performed, e.g., 'click'.",
            "examples": [
              "click"
            ]
          },
          "index": {
            "type": "integer",
            "title": "Index",
            "description": "The sequential index of the action.",
            "examples": [
              1
            ]
          },
          "screenshot": {
            "type": "string",
            "title": "Screenshot",
            "description": "URL of the screenshot taken at the time of the action.",
            "examples": [
              "https://example.com/screenshot1.png"
            ]
          }
        },
        "type": "object",
        "required": [
          "action",
          "index",
          "screenshot"
        ],
        "title": "Action"
      },
      "Advanced": {
        "properties": {
          "block_ads": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Ads",
            "description": "Whether to block advertisements during the browser session.",
            "default": false,
            "example": true
          },
          "solve_captchas": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solve Captchas",
            "description": "Whether to attempt automatic CAPTCHA solving.",
            "default": false,
            "example": true
          },
          "proxy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProxySettings"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "Proxy",
            "description": "Proxy details for the browser session. Automatically defaults to True if solve_captchas is on.",
            "default": false,
            "examples": [
              {
                "city": "sanfrancisco",
                "country": "us",
                "state": "ca",
                "zip": 94102
              },
              true,
              false
            ]
          },
          "extension_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension Ids",
            "description": "list of extension ids",
            "default": [],
            "example": [
              "df2399ea-a938-438f-9d4b-ef3bc95cf8af"
            ]
          }
        },
        "type": "object",
        "title": "Advanced"
      },
      "AuthStateResponse": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "unliked",
              "active"
            ],
            "title": "Status",
            "description": "Authentication status.",
            "examples": [
              "active"
            ]
          },
          "appName": {
            "type": "string",
            "title": "Appname",
            "description": "The name of the app for which the authentication status is checked",
            "examples": [
              "my_awesome_app"
            ]
          }
        },
        "type": "object",
        "required": [
          "status",
          "appName"
        ],
        "title": "AuthStateResponse"
      },
      "AvailableApp": {
        "properties": {
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "URL of the application icon.",
            "examples": [
              "https://example.com/app_icon.png"
            ]
          },
          "displayName": {
            "type": "string",
            "title": "Displayname",
            "description": "Display name of the application.",
            "examples": [
              "My Awesome App"
            ]
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Category of the application (e.g., 'Productivity', 'Social').",
            "examples": [
              "Productivity"
            ]
          },
          "appName": {
            "type": "string",
            "title": "Appname",
            "description": "Unique identifier for the application.",
            "examples": [
              "my_awesome_app"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "In Review",
              "Not Accepted"
            ],
            "title": "Status",
            "description": "Status of the application.",
            "examples": [
              "Active"
            ]
          },
          "appUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appurl",
            "description": "URL of the application.",
            "examples": [
              "https://my-awesome-app.com"
            ]
          },
          "appDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appdescription",
            "description": "A brief description of the application.",
            "examples": [
              "This app helps you be more productive."
            ]
          }
        },
        "type": "object",
        "required": [
          "displayName",
          "category",
          "appName",
          "status"
        ],
        "title": "AvailableApp"
      },
      "AvailableAppsResponse": {
        "properties": {
          "availableApps": {
            "items": {
              "$ref": "#/components/schemas/AvailableApp"
            },
            "type": "array",
            "title": "Availableapps",
            "description": "List of available applications.",
            "examples": [
              [
                {
                  "appDescription": "This app helps you be more productive.",
                  "appName": "my_awesome_app",
                  "appUrl": "https://my-awesome-app.com",
                  "category": "Productivity",
                  "displayName": "My Awesome App",
                  "icon": "https://example.com/app_icon.png",
                  "status": "Active"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "availableApps"
        ],
        "title": "AvailableAppsResponse"
      },
      "Body_upload_extension": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_extension"
      },
      "CreateUserRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "specify name of user.",
            "examples": [
              "john"
            ]
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "specify email of user.",
            "examples": [
              "john.doe@example.com"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "title": "CreateUserRequest"
      },
      "CreateUserResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "If user was created successfully.",
            "examples": [
              true
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the created user.",
            "examples": [
              "john"
            ]
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email of the created user.",
            "examples": [
              "jonh@appleseed.com"
            ]
          },
          "raccoonPasscode": {
            "type": "string",
            "title": "Raccoonpasscode",
            "description": "Raccoon passcode associated with the user.",
            "examples": [
              "raccoon123"
            ]
          }
        },
        "type": "object",
        "required": [
          "success",
          "name",
          "email",
          "raccoonPasscode"
        ],
        "title": "CreateUserResponse"
      },
      "ExtensionListResponse": {
        "properties": {
          "extensions": {
            "items": {
              "$ref": "#/components/schemas/ExtensionResponse"
            },
            "type": "array",
            "title": "Extensions",
            "description": "List of extensions.",
            "examples": [
              [
                {
                  "extensionId": "ext_abcdef123456",
                  "filename": "my_extension.zip"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "extensions"
        ],
        "title": "ExtensionListResponse"
      },
      "ExtensionResponse": {
        "properties": {
          "extensionId": {
            "type": "string",
            "title": "Extensionid",
            "description": "Unique identifier for the extension.",
            "examples": [
              "ext_abcdef123456"
            ]
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Name of the extension file.",
            "examples": [
              "my_extension.zip"
            ]
          }
        },
        "type": "object",
        "required": [
          "extensionId",
          "filename"
        ],
        "title": "ExtensionResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegrationRequest": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties or data related to the particular integration."
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id",
            "description": "The unique identifier for the integration being called.",
            "default": ""
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Whether the response should be streamed back or not.",
            "default": false
          },
          "raccoon_passcode": {
            "type": "string",
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made."
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false,
              "extension_ids": []
            },
            "example": {
              "block_ads": true,
              "proxy": {
                "city": "sanfrancisco",
                "country": "us",
                "state": "ca",
                "zip": 94102
              },
              "solve_captchas": true
            }
          }
        },
        "type": "object",
        "required": [
          "raccoon_passcode"
        ],
        "title": "IntegrationRequest"
      },
      "IntegrationResponse": {
        "properties": {
          "task_status": {
            "type": "string",
            "enum": [
              "STARTING",
              "PROCESSING",
              "DONE",
              "HUMAN_INTERACTION",
              "FAILURE"
            ],
            "title": "Task Status",
            "description": "The current status of the extraction task. For example: 'STARTING', 'PROCESSING', 'DONE', 'HUMAN_INTERACTION', or 'FAILURE'.",
            "example": "DONE"
          },
          "integration_id": {
            "type": "string",
            "title": "Integration Id",
            "description": "A unique identifier for the integration in use.",
            "example": "integration_12345"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message providing the thought summary if the status is processing currently.",
            "example": "Record added successfully."
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "description": "Additional metadata or details related to the integration task.",
            "example": {
              "records_processed": 1500
            }
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.raccoonai.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          }
        },
        "type": "object",
        "required": [
          "task_status",
          "integration_id",
          "message",
          "properties",
          "livestream_url"
        ],
        "title": "IntegrationResponse"
      },
      "LAMRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "The input query string for the request. This is typically the main prompt.",
            "example": "Find YCombinator startups who got funded in W24."
          },
          "chat_history": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat History",
            "description": "The history of the conversation as a list of messages or objects you might use while building a chat app to give the model context of the past conversation.",
            "example": []
          },
          "app_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Url",
            "description": "This is the entrypoint URL for the web agent.",
            "default": "",
            "example": "https://www.ycombinator.com/companies"
          },
          "schema": {
            "type": "object",
            "title": "Schema",
            "description": "The expected schema for the response. This is a dictionary where the keys describe the fields and the values describe their purposes.",
            "example": {
              "address": {
                "city": "What city is the company located in?",
                "country": "Which country is the company located in?"
              },
              "funding_season": "The funding season like W24 as a string",
              "name": "Name of the company as a string"
            }
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count",
            "description": "The maximum number of results to extract.",
            "default": 1,
            "example": 5
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Whether the response should be streamed back or not.",
            "default": false,
            "example": true
          },
          "mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "deepsearch",
                  "default"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "description": "Mode of execution.",
            "default": "default",
            "example": "deepsearch"
          },
          "raccoon_passcode": {
            "type": "string",
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made.",
            "example": "<end-user-raccoon-passcode>"
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false,
              "extension_ids": []
            },
            "example": {
              "block_ads": true,
              "proxy": {
                "city": "sanfrancisco",
                "country": "us",
                "state": "ca",
                "zip": 94102
              },
              "solve_captchas": true
            }
          }
        },
        "type": "object",
        "required": [
          "query",
          "raccoon_passcode"
        ],
        "title": "LAMRequest"
      },
      "LAMResponse": {
        "properties": {
          "task_status": {
            "type": "string",
            "enum": [
              "STARTING",
              "PROCESSING",
              "DONE",
              "HUMAN_INTERACTION",
              "FAILURE"
            ],
            "title": "Task Status",
            "description": "The current status of the extraction task. For example: 'STARTING', 'PROCESSING', 'DONE', 'HUMAN_INTERACTION', or 'FAILURE'.",
            "example": "DONE"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message providing the thought summary if the status is processing currently.",
            "example": "The price of iPhone 16 on Amazon is $729.97."
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Data",
            "description": "The extracted data as a list of objects when the status is DONE. Each object represents an extracted entity.",
            "example": [
              {
                "address": {
                  "city": "San Francisco",
                  "country": "USA"
                },
                "funding_season": "W24",
                "name": "Granza Bio"
              },
              {
                "address": {
                  "city": "London",
                  "country": "United Kingdom"
                },
                "funding_season": "W24",
                "name": "Konstructly"
              }
            ]
          },
          "properties": {
            "type": "object",
            "title": "Properties",
            "description": "Additional metadata or details related to the run task.",
            "example": {
              "sessionId": "1234"
            }
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.raccoonai.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          }
        },
        "type": "object",
        "required": [
          "task_status",
          "message",
          "data",
          "properties",
          "livestream_url"
        ],
        "title": "LAMResponse"
      },
      "LinkedAppsResponse": {
        "properties": {
          "linkedApps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Linkedapps",
            "description": "List of linked application names.",
            "examples": [
              [
                "app1",
                "app2",
                "app3"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "linkedApps"
        ],
        "title": "LinkedAppsResponse"
      },
      "Meta": {
        "properties": {
          "totalPages": {
            "type": "integer",
            "title": "Totalpages",
            "description": "Total number of pages available.",
            "examples": [
              5
            ]
          },
          "totalRecords": {
            "type": "integer",
            "title": "Totalrecords",
            "description": "Total number of records across all pages.",
            "examples": [
              50
            ]
          },
          "currentPage": {
            "type": "integer",
            "title": "Currentpage",
            "description": "The current page number.",
            "examples": [
              1
            ]
          }
        },
        "type": "object",
        "required": [
          "totalPages",
          "totalRecords",
          "currentPage"
        ],
        "title": "Meta"
      },
      "ProxySettings": {
        "properties": {
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Target country (2-letter ISO code).",
            "default": "us",
            "example": "us"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "Target city.",
            "example": "sanfrancisco"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "Target state (2-letter code).",
            "example": "ca"
          },
          "zip": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip",
            "description": "Target postal code.",
            "example": 90210
          }
        },
        "type": "object",
        "title": "ProxySettings"
      },
      "Recording": {
        "properties": {
          "pageTitle": {
            "type": "string",
            "title": "Pagetitle",
            "description": "The title of the webpage where the recording took place.",
            "examples": [
              "Google"
            ]
          },
          "pageUrl": {
            "type": "string",
            "title": "Pageurl",
            "description": "The URL of the webpage where the recording took place.",
            "examples": [
              "https://www.google.com/"
            ]
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL of the recording file.",
            "examples": [
              "https://example.com/recording.webm"
            ]
          }
        },
        "type": "object",
        "required": [
          "pageTitle",
          "pageUrl",
          "url"
        ],
        "title": "Recording"
      },
      "Session": {
        "properties": {
          "sessionId": {
            "type": "string",
            "title": "Sessionid",
            "description": "Unique identifier for the session.",
            "examples": [
              "session_xyz789012"
            ]
          },
          "executionType": {
            "type": "string",
            "enum": [
              "default",
              "deepsearch",
              "fleet"
            ],
            "title": "Executiontype",
            "description": "The type of execution performed (e.g., 'default', 'deepsearch').",
            "examples": [
              "deepsearch"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "failure",
              "running"
            ],
            "title": "Status",
            "description": "Current status of the session.",
            "examples": [
              "success"
            ]
          },
          "inputs": {
            "type": "object",
            "title": "Inputs",
            "description": "Input parameters used for the session.",
            "examples": [
              {
                "param2": "value2",
                "url": "https://another-example.com"
              }
            ]
          },
          "output": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Output",
            "description": "Output generated by the session.",
            "examples": [
              [
                {
                  "extracted_data1": "value1"
                },
                {
                  "extracted_data2": "value2"
                }
              ]
            ]
          },
          "raccoonPasscode": {
            "type": "string",
            "title": "Raccoonpasscode",
            "description": "Passcode associated with the user.",
            "examples": [
              "raccoon_secret_456"
            ]
          },
          "taskId": {
            "type": "string",
            "title": "Taskid",
            "description": "Unique identifier for the associated task.",
            "examples": [
              "task_abcdef123456"
            ]
          },
          "executionTime": {
            "type": "integer",
            "title": "Executiontime",
            "description": "Time taken for the session execution (in milliseconds).",
            "examples": [
              30000
            ]
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp",
            "description": "Unix timestamp (in milliseconds) indicating when the session was created.",
            "examples": [
              1678972800000
            ]
          }
        },
        "type": "object",
        "required": [
          "sessionId",
          "executionType",
          "status",
          "inputs",
          "output",
          "raccoonPasscode",
          "taskId",
          "executionTime",
          "timestamp"
        ],
        "title": "Session"
      },
      "SessionCreateResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the created session.",
            "example": "session_12345"
          },
          "websocket_url": {
            "type": "string",
            "title": "Websocket Url",
            "description": "The WebSocket URL for interacting with the session.",
            "example": "wss://connect.raccoonai.tech/ws/6000?sessionId=session_12345"
          },
          "livestream_url": {
            "type": "string",
            "title": "Livestream Url",
            "description": "The Livestream URL",
            "example": "https://api.raccoonai.tech/sessions/session_12345/stream?enable_actions=true&theme=dark"
          },
          "status": {
            "type": "string",
            "enum": [
              "starting",
              "running",
              "terminated",
              "completed",
              "unknown",
              "success",
              "failure"
            ],
            "title": "Status",
            "description": "The current status of the session.",
            "example": "running"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "websocket_url",
          "livestream_url",
          "status"
        ],
        "title": "SessionCreateResponse"
      },
      "SessionListResponse": {
        "properties": {
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/Session"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of sessions.",
            "examples": [
              [
                {
                  "executionTime": 30,
                  "executionType": "deepsearch",
                  "inputs": {
                    "param2": "value2",
                    "url": "https://another-example.com"
                  },
                  "output": [
                    {
                      "extracted_data1": "value1"
                    },
                    {
                      "extracted_data2": "value2"
                    }
                  ],
                  "raccoonPasscode": "raccoon_secret_456",
                  "sessionId": "session_xyz789012",
                  "status": "success",
                  "taskId": "task_abcdef123456",
                  "timestamp": 1678972800
                }
              ]
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Metadata about the session list."
          }
        },
        "type": "object",
        "required": [
          "sessions",
          "meta"
        ],
        "title": "SessionListResponse"
      },
      "SessionLogsResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the session.",
            "example": "session_12345"
          },
          "session_logs": {
            "type": "object",
            "title": "Session Logs",
            "description": "A dictionary containing the browser console logs for the session.",
            "example": {}
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "session_logs"
        ],
        "title": "SessionLogsResponse"
      },
      "SessionMediaResponse": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/Action"
            },
            "type": "array",
            "title": "Actions",
            "description": "A list of actions performed, not applicable to fleet sessions.",
            "examples": [
              [
                {
                  "action": "click",
                  "index": 1,
                  "screenshot": "https://example.com/screenshot1.png"
                }
              ]
            ]
          },
          "recordings": {
            "items": {
              "$ref": "#/components/schemas/Recording"
            },
            "type": "array",
            "title": "Recordings",
            "description": "A list of recordings associated.",
            "examples": [
              [
                {
                  "pageTitle": "Example Page",
                  "pageUrl": "https://example.com",
                  "url": "https://example.com/recording1.webm"
                }
              ]
            ]
          },
          "sessionId": {
            "type": "string",
            "title": "Sessionid",
            "description": "A unique identifier for the session.",
            "examples": [
              "session-12345"
            ]
          }
        },
        "type": "object",
        "required": [
          "actions",
          "recordings",
          "sessionId"
        ],
        "title": "SessionMediaResponse"
      },
      "SessionRequest": {
        "properties": {
          "raccoon_passcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raccoon Passcode",
            "description": "The raccoon passcode associated with the end user on behalf of which the call is being made if any.",
            "example": "<end-user-raccoon-passcode>"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "The entrypoint url for the session.",
            "default": "https://www.google.com",
            "example": "https://www.google.com"
          },
          "browser_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "chromium",
                  "firefox",
                  "webkit"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Type",
            "description": "The type of browser to use. Supported values include 'chromium', 'firefox', and 'webkit'.",
            "default": "chromium",
            "example": "chromium"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Settings"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration settings for the browser, such as viewport size and User-Agent string.",
            "default": {
              "viewport": {
                "height": 720,
                "width": 1280
              },
              "locales": [
                "en-US"
              ]
            },
            "example": {
              "locales": [
                "en-US",
                "fr-FR"
              ],
              "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
              "viewport": {
                "height": 720,
                "width": 1280
              }
            }
          },
          "advanced": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Advanced"
              },
              {
                "type": "null"
              }
            ],
            "description": "Advanced configuration options for the session, such as ad-blocking and CAPTCHA solving.",
            "default": {
              "block_ads": false,
              "solve_captchas": false,
              "proxy": false,
              "extension_ids": []
            },
            "example": {
              "block_ads": true,
              "proxy": {
                "city": "sanfrancisco",
                "country": "us",
                "state": "ca",
                "zip": 94102
              },
              "solve_captchas": true
            }
          },
          "headless": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headless",
            "description": "Whether to run the browser in headless mode.",
            "default": false,
            "example": true
          },
          "session_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout",
            "description": "The timeout for the browser session in seconds.",
            "default": 300,
            "example": 600
          }
        },
        "type": "object",
        "title": "SessionRequest"
      },
      "SessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "A unique identifier for the session.",
            "example": "session_12345"
          },
          "status": {
            "type": "string",
            "enum": [
              "starting",
              "running",
              "terminated",
              "completed",
              "unknown"
            ],
            "title": "Status",
            "description": "The current status of the session.",
            "example": "terminated"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status"
        ],
        "title": "SessionResponse"
      },
      "Settings": {
        "properties": {
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent",
            "description": "The User-Agent string to use for the browser. Defaults to internal auto user-agent rotation mechanism.",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
          },
          "viewport": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Viewport",
            "description": "The viewport size (screen dimensions) for the browser in pixels.",
            "default": {
              "width": 1280,
              "height": 720
            },
            "example": {
              "height": 720,
              "width": 1280
            }
          },
          "locales": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locales",
            "description": "A list of locales or languages to use for the browser session. These determine language preferences.",
            "default": [
              "en-US"
            ],
            "example": [
              "en-US",
              "fr-FR"
            ]
          }
        },
        "type": "object",
        "title": "Settings"
      },
      "Task": {
        "properties": {
          "executionType": {
            "type": "string",
            "enum": [
              "default",
              "deepsearch"
            ],
            "title": "Executiontype",
            "description": "The type of execution performed (e.g., 'default', 'deepsearch').",
            "examples": [
              "default"
            ]
          },
          "raccoonPasscode": {
            "type": "string",
            "title": "Raccoonpasscode",
            "description": "Passcode associated with the user.",
            "examples": [
              "raccoon_secret_123"
            ]
          },
          "inputs": {
            "type": "object",
            "title": "Inputs",
            "description": "Input parameters used for the task execution.",
            "examples": [
              {
                "param1": "value1",
                "url": "https://example.com"
              }
            ]
          },
          "taskId": {
            "type": "string",
            "title": "Taskid",
            "description": "Unique identifier for the task.",
            "examples": [
              "task_abcdef123456"
            ]
          },
          "timestamp": {
            "type": "integer",
            "title": "Timestamp",
            "description": "Unix timestamp (in seconds) indicating when the task was created.",
            "examples": [
              1678886400
            ]
          },
          "executionTime": {
            "type": "integer",
            "title": "Executiontime",
            "description": "Time taken for the task execution (in seconds).",
            "examples": [
              15
            ]
          },
          "output": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Output",
            "description": "Output generated by the task execution.",
            "examples": [
              [
                {
                  "result1": "data1"
                },
                {
                  "result2": "data2"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "executionType",
          "raccoonPasscode",
          "inputs",
          "taskId",
          "timestamp",
          "executionTime",
          "output"
        ],
        "title": "Task"
      },
      "TaskListResponse": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "type": "array",
            "title": "Tasks",
            "description": "List of tasks.",
            "examples": [
              [
                {
                  "executionTime": 15,
                  "executionType": "default",
                  "inputs": {
                    "param1": "value1",
                    "url": "https://example.com"
                  },
                  "output": [
                    {
                      "result1": "data1"
                    },
                    {
                      "result2": "data2"
                    }
                  ],
                  "raccoonPasscode": "raccoon_secret_123",
                  "taskId": "task_abcdef123456",
                  "timestamp": 1678886400
                }
              ]
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Metadata about the task list."
          }
        },
        "type": "object",
        "required": [
          "tasks",
          "meta"
        ],
        "title": "TaskListResponse"
      },
      "TaskMediaResponse": {
        "properties": {
          "media": {
            "items": {
              "$ref": "#/components/schemas/SessionMediaResponse"
            },
            "type": "array",
            "title": "Media",
            "description": "A list of media data, including actions and recordings.",
            "examples": [
              [
                {
                  "actions": [
                    {
                      "action": "click",
                      "index": 1,
                      "screenshot": "https://example.com/screenshot1.png"
                    }
                  ],
                  "recordings": [
                    {
                      "pageTitle": "Example Page",
                      "pageUrl": "https://example.com",
                      "url": "https://example.com/recording1.webm"
                    }
                  ],
                  "sessionId": "session123"
                }
              ]
            ]
          },
          "taskId": {
            "type": "string",
            "title": "Taskid",
            "description": "A unique identifier for the task.",
            "examples": [
              "task-abcde"
            ]
          }
        },
        "type": "object",
        "required": [
          "media",
          "taskId"
        ],
        "title": "TaskMediaResponse"
      },
      "User": {
        "properties": {
          "raccoonPasscode": {
            "type": "string",
            "title": "Raccoonpasscode",
            "description": "Passcode associated with the user.",
            "examples": [
              "user_raccoon_789"
            ]
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address.",
            "examples": [
              "john.doe@example.com"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "User's full name.",
            "examples": [
              "John Doe"
            ]
          },
          "createdAt": {
            "type": "integer",
            "title": "Createdat",
            "description": "Unix timestamp (in milliseconds) indicating when the user account was created.",
            "examples": [
              1678800000000
            ]
          },
          "avatar": {
            "type": "string",
            "title": "Avatar",
            "description": "URL of the user's avatar image.",
            "examples": [
              "https://example.com/avatar.jpg"
            ]
          }
        },
        "type": "object",
        "required": [
          "raccoonPasscode",
          "email",
          "name",
          "createdAt",
          "avatar"
        ],
        "title": "User"
      },
      "UserListResponse": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Users",
            "description": "List of users.",
            "examples": [
              [
                {
                  "avatar": "https://example.com/avatar.jpg",
                  "createdAt": 1678800000,
                  "email": "john.doe@example.com",
                  "name": "John Doe",
                  "raccoonPasscode": "user_raccoon_789"
                }
              ]
            ]
          },
          "adminRaccoonPasscode": {
            "type": "string",
            "title": "Adminraccoonpasscode",
            "description": "Admin Raccoon passcode.",
            "examples": [
              "admin_secret"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Metadata about the user list."
          }
        },
        "type": "object",
        "required": [
          "users",
          "adminRaccoonPasscode",
          "meta"
        ],
        "title": "UserListResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "raccoon-secret-key": {
        "type": "apiKey",
        "in": "header",
        "name": "raccoon-secret-key"
      }
    }
  },
  "security": [
    {
      "raccoon-secret-key": []
    }
  ]
}